{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACbuC;AACxB;;AAEf,kBAAkB,gDAAM;AACxB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACRsC;AACvB;;AAEf,kBAAkB,gDAAM;AACxB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRoB;AACa;;;AAGjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9CkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,gBAAgB,EAAE,cAAc;AAClD;AACA;;;;;;;;;;;;;;;;ACXuC;AACN;AACT;;AAExB,2BAA2B,gDAAM;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,qBAAqB,YAAY,cAAc;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,8CAA8C,cAAc,OAAO,SAAS;AAC5E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,kEAA2B;AACzC;AACA,6BAA6B,6BAA6B,sBAAsB,aAAa;AAC7F;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc,OAAO,aAAa;AACvD;AACA;AACA;AACA;;;;;;UCtDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNuC;AACN;AACA;AACM;AACI;AACQ;;;AAGnD;AACA,yBAAyB,oDAAQ;AACjC,6BAA6B,4DAAY;AACzC,8BAA8B,0CAAG,mCAAmC,0CAAG,wCAAwC,0CAAG,sCAAsC,0CAAG,0CAA0C,0CAAG;AACxM,uBAAuB,gDAAM,sCAAsC,gDAAM,wCAAwC,gDAAM,sCAAsC,gDAAM;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,O","sources":["webpack://homework_24/./src/scripts/classAnimal.js","webpack://homework_24/./src/scripts/classCat.js","webpack://homework_24/./src/scripts/classDog.js","webpack://homework_24/./src/scripts/classHospital.js","webpack://homework_24/./src/scripts/classPerson.js","webpack://homework_24/./src/scripts/classVeterinarian.js","webpack://homework_24/webpack/bootstrap","webpack://homework_24/webpack/runtime/define property getters","webpack://homework_24/webpack/runtime/hasOwnProperty shorthand","webpack://homework_24/webpack/runtime/make namespace object","webpack://homework_24/./src/scripts/index.js"],"sourcesContent":["export { Animal }\n\nclass Animal{\n    constructor(nickname, food, location, age){\n        this.nickname = nickname;\n        this.food = food;\n        this.location = location;\n        this.age = age;\n    }\n\n    changeFood(otherFood){\n        return this.food = otherFood;\n    }\n}","import { Animal } from \"./classAnimal\";\nexport { Cat };\n\nclass Cat extends Animal {\n    constructor(nickname, food, location, age, isHomeless = true){\n        super(nickname, food, location, age);\n        this.isHomeless = isHomeless;\n    }\n}\n","import { Animal } from './classAnimal'\nexport { Dog };\n\nclass Dog extends Animal {\n    constructor(nickname, food, location, age, weight){\n        super(nickname, food, location, age);\n        this.weight = weight;\n    }\n}","export { Hospital };\nimport { Cat } from './classCat';\n\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  };\n\nclass Hospital {\n    constructor(name){\n        this.name = name;\n    }\n\n    #illAnimals = [];\n\n    #findingPetsPeople = [];\n\n    getAnimals(){\n        return this.#illAnimals;\n    }\n\n    getFindingPetsPeople(){\n        return this.#findingPetsPeople;\n    }\n\n    addAnimal(animal){\n        this.#illAnimals.push(animal);\n    }\n\n    addPeople(human){\n        this.#findingPetsPeople.push(human);\n    }\n\n    findHome(pet){\n        if(this.#illAnimals.includes(pet.nickname)){\n            return {\n                status: 'restricted',\n                message: `We need to heal ${pet.nickname} firstly`,\n            };\n        };\n        const randomFindingPetHuman = this.#findingPetsPeople.splice(getRandomInt(this.#findingPetsPeople.length), 1);\n            return {\n                status: 'success',\n                name: randomFindingPetHuman,\n            }    \n    }\n}","export { Person };\n\nclass Person {\n    constructor (firstName, lastName){\n        this.firstName = firstName;\n        this.lastName = lastName;\n    }\n\n    getFullName(){\n        return `${this.firstName} ${this.lastName}`;\n    }\n}","import { Person } from \"./classPerson\";\nimport { Cat } from './classCat';\nexport { Veterinarian };\n\nclass Veterinarian extends Person {\n    constructor(firstName, lastName, hospital){\n        super(firstName, lastName);\n        this.hospital = hospital;\n    }\n\n    #diagnosis = { \n        ill: 'ill',\n        healthy: 'healthy' \n    }\n\n    getFullName(){\n        return `${super.getFullName()} works at (${this.hospital})`;\n    }\n\n    #setDiagnosis(hospital, pet){\n            if(pet.weight > 20){\n                hospital.addAnimal(pet);\n                return {\n                    diagnosis: this.#diagnosis.ill,\n                    info: 'overweight',\n                }\n            } else if(pet.food === 'meal' && pet.age < 1){\n                hospital.addAnimal(pet);\n                pet.changeFood('dry food');\n                return {\n                    diagnosis: this.#diagnosis.ill,\n                    info: `change food. Now ${pet.nickname} eats ${pet.food}`\n                }\n            }\n        return {\n            diagnosis: this.#diagnosis.healthy,\n        }\n    }\n\n    treatAnimal(hospital, pet){\n        const result = this.#setDiagnosis(hospital, pet);\n        if(pet.isHomeless){\n           if(Cat.prototype.isPrototypeOf(pet) && hospital.findHome(pet).status === 'success'){\n            return {\n                info: `Now ${hospital.findHome(pet).name} have a new friend - ${pet.nickname}`,\n                fullDiagnos: result,\n                }\n            } \n        }\n        return {\n            info: `${pet.nickname} from ${pet.location}`,\n            fullDiagnos: result,\n        }\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Animal } from './classAnimal';\nimport { Dog } from './classDog';\nimport { Cat } from './classCat';\nimport { Person } from './classPerson';\nimport { Hospital } from './classHospital';\nimport { Veterinarian } from './classVeterinarian';\n\n\nfunction main(){\n    const hospital = new Hospital('Saint Victoria');\n    const veterenarian = new Veterinarian('Jhon', 'Lock', hospital.name);\n    const arrOfAnimals = [new Cat('Barsik', 'meal', 'Kyiv', 2), new Dog('Dogster', 'meat', 'Kyiv', 2, 14), new Cat('Boris', 'dry food', 'Lviv', 5), new Dog('Barker', 'meal', 'London', 0.5, 5), new Cat('Wiskers', 'meal', 'Odesa', 0.8)];\n    let persons = [new Person('Sam', 'Patkins').getFullName(), new Person('Anton', 'Chornii').getFullName(), new Person('Stepan', 'Giga').getFullName(), new Person('Victoria', 'Polishchuk').getFullName()];\n    for(let human of persons){\n        hospital.addPeople(human);\n    }\n    console.group(veterenarian.getFullName());\n    for(let animal of arrOfAnimals){\n        console.log(veterenarian.treatAnimal(hospital, animal));\n    }\n    console.groupEnd();\n    console.log('Animals in the hospital:', hospital.getAnimals());\n}\nmain();"],"names":[],"sourceRoot":""}